// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema/list.proto

package schema

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type List struct {
	Items                []*any.Any `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c30773969692308, []int{0}
}

func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (m *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(m, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetItems() []*any.Any {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*List)(nil), "cckit.state.schema.List")
}

func init() {
	proto.RegisterFile("schema/list.proto", fileDescriptor_5c30773969692308)
}

var fileDescriptor_5c30773969692308 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x4e, 0xce, 0x48,
	0xcd, 0x4d, 0xd4, 0xcf, 0xc9, 0x2c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4a,
	0x4e, 0xce, 0xce, 0x2c, 0xd1, 0x2b, 0x2e, 0x49, 0x2c, 0x49, 0xd5, 0x83, 0x48, 0x4b, 0x49, 0xa6,
	0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0x55, 0x24, 0x95, 0xa6, 0xe9, 0x27, 0xe6, 0x55, 0x42,
	0x94, 0x2b, 0x19, 0x71, 0xb1, 0xf8, 0x64, 0x16, 0x97, 0x08, 0x69, 0x71, 0xb1, 0x66, 0x96, 0xa4,
	0xe6, 0x16, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0x89, 0xe8, 0x41, 0xb4, 0xe8, 0xc1, 0xb4,
	0xe8, 0x39, 0xe6, 0x55, 0x06, 0x41, 0x94, 0x38, 0x19, 0x44, 0xe9, 0xa5, 0x67, 0x96, 0x64, 0x94,
	0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x17, 0x9b, 0x97, 0xa4, 0x26, 0x67, 0xe4, 0x24, 0x26, 0xe9,
	0x83, 0x6d, 0xd6, 0x07, 0xdb, 0xac, 0x0f, 0xb1, 0xd9, 0x1a, 0x42, 0x25, 0xb1, 0x81, 0x8d, 0x31,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x51, 0x62, 0x16, 0x4c, 0xb0, 0x00, 0x00, 0x00,
}
